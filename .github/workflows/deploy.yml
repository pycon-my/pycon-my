name: Deploy to GitHub Pages

on:
  # Trigger the workflow every time you push to the `main` branch
  # Using a different branch name? Replace `main` with your branchâ€™s name
  push:
    branches: [main, stage]
  pull_request:
    branches: [stage]
  # Allows you to run this workflow manually from the Actions tab on GitHub.
  workflow_dispatch:

# Allow this job to clone the repo and create a page deployment
permissions:
  contents: read
  pages: write
  id-token: write

env:
  PAGE_ENV: ${{ github.ref_name == 'main' && 'production' || 'staging'}}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout your repository using git
        uses: actions/checkout@v3
      - name: Install, build, and upload your site
        uses: withastro/action@v1
        # with:
        # path: . # The root location of your Astro project inside the repository. (optional)
        # node-version: 18 # The specific version of Node that should be used to build your site. Defaults to 18. (optional)
        # package-manager: pnpm@latest # The Node package manager that should be used to install dependencies and build your site. Automatically detected based on your lockfile. (optional)

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ github.ref_name == 'main' }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

  deploy-staging:
    needs: build
    runs-on: ubuntu-latest
    # if: ${{ github.ref_name == 'stage' }}
    if: ${{ github.ref_name != 'main' }}
    env:
      SURGE_DOMAIN: ${{ secrets.SURGE_DOMAIN }}
      SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 20
      - run: npm install -g surge
      - uses: actions/download-artifact@v4
        with:
          name: github-pages
      - name: Display structure of downloaded files
        run: ls -R
      - name: Deploy to surge.sh
        run: surge . ${{ env.SURGE_DOMAIN }} --token ${{ env.SURGE_TOKEN }}
